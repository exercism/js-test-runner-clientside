diff --git a/dist/cli.js b/dist/cli.js
index eb2879e54b235bf1a15d37294c9d54bafa9bd44d..a468b513d606745f8771ed369ef55a39cf74d419 100644
--- a/dist/cli.js
+++ b/dist/cli.js
@@ -21,6 +21,7 @@ var postcss = require('rollup-plugin-postcss');
 var typescript = require('rollup-plugin-typescript2');
 var json = require('@rollup/plugin-json');
 var OMT = require('@surma/rollup-plugin-off-main-thread');
+var polyfill = require('rollup-plugin-polyfill-node');
 var gzipSize = require('gzip-size');
 var brotliSize = require('brotli-size');
 var prettyBytes = require('pretty-bytes');
@@ -46,6 +47,7 @@ var postcss__default = /*#__PURE__*/_interopDefaultLegacy(postcss);
 var typescript__default = /*#__PURE__*/_interopDefaultLegacy(typescript);
 var json__default = /*#__PURE__*/_interopDefaultLegacy(json);
 var OMT__default = /*#__PURE__*/_interopDefaultLegacy(OMT);
+var polyfill__default = /*#__PURE__*/_interopDefaultLegacy(polyfill);
 var gzipSize__default = /*#__PURE__*/_interopDefaultLegacy(gzipSize);
 var brotliSize__default = /*#__PURE__*/_interopDefaultLegacy(brotliSize);
 var prettyBytes__default = /*#__PURE__*/_interopDefaultLegacy(prettyBytes);
@@ -871,6 +873,8 @@ function createConfig(options, entry, format, writeMeta) {
 
   if (options.target === 'node') {
     external = [/node:.*/].concat(builtinModules__default['default']);
+  } else {
+    external = ['dns', 'url']
   }
 
   const peerDeps = Object.keys(pkg.peerDependencies || {});
@@ -1016,7 +1020,8 @@ function createConfig(options, entry, format, writeMeta) {
           }),
           map: null
         })
-      }, (useTypescript || emitDeclaration) && typescript__default['default']({
+      }, (options.target !== 'node' && polyfill__default['default']()),
+      (useTypescript || emitDeclaration) && typescript__default['default']({
         cwd: options.cwd,
         typescript: require(resolveFrom_1.silent(options.cwd, 'typescript') || 'typescript'),
         cacheRoot: `./node_modules/.cache/.rts2_cache_${format}`,
diff --git a/dist/microbundle.js b/dist/microbundle.js
index 5676d079bec4c6704c0908ae02c90935ac48b80e..d832b6fed2ed04c887f4b2aebc553cf921128874 100644
--- a/dist/microbundle.js
+++ b/dist/microbundle.js
@@ -21,6 +21,7 @@ var postcss = require('rollup-plugin-postcss');
 var typescript = require('rollup-plugin-typescript2');
 var json = require('@rollup/plugin-json');
 var OMT = require('@surma/rollup-plugin-off-main-thread');
+var polyfill = require('rollup-plugin-polyfill-node');
 var gzipSize = require('gzip-size');
 var brotliSize = require('brotli-size');
 var prettyBytes = require('pretty-bytes');
@@ -45,6 +46,7 @@ var postcss__default = /*#__PURE__*/_interopDefaultLegacy(postcss);
 var typescript__default = /*#__PURE__*/_interopDefaultLegacy(typescript);
 var json__default = /*#__PURE__*/_interopDefaultLegacy(json);
 var OMT__default = /*#__PURE__*/_interopDefaultLegacy(OMT);
+var polyfill__default = /*#__PURE__*/_interopDefaultLegacy(polyfill);
 var gzipSize__default = /*#__PURE__*/_interopDefaultLegacy(gzipSize);
 var brotliSize__default = /*#__PURE__*/_interopDefaultLegacy(brotliSize);
 var prettyBytes__default = /*#__PURE__*/_interopDefaultLegacy(prettyBytes);
@@ -869,6 +871,8 @@ function createConfig(options, entry, format, writeMeta) {
 
   if (options.target === 'node') {
     external = [/node:.*/].concat(builtinModules__default['default']);
+  } else {
+    external = ['dns', 'url']
   }
 
   const peerDeps = Object.keys(pkg.peerDependencies || {});
@@ -1014,7 +1018,8 @@ function createConfig(options, entry, format, writeMeta) {
           }),
           map: null
         })
-      }, (useTypescript || emitDeclaration) && typescript__default['default']({
+      }, (options.target !== 'node' && polyfill__default['default']()),
+      (useTypescript || emitDeclaration) && typescript__default['default']({
         cwd: options.cwd,
         typescript: require(resolveFrom_1.silent(options.cwd, 'typescript') || 'typescript'),
         cacheRoot: `./node_modules/.cache/.rts2_cache_${format}`,
@@ -1106,7 +1111,6 @@ function createConfig(options, entry, format, writeMeta) {
             fs__default['default'].writeFile(filename, json, () => {});
           }
         }
-
       }], options.visualize && rollupPluginVisualizer.visualizer(), // NOTE: OMT only works with amd and esm
       // Source: https://github.com/surma/rollup-plugin-off-main-thread#config
       useWorkerLoader && (format === 'es' || modern) && OMT__default['default'](),
diff --git a/package.json b/package.json
index 6cf2034f95c70b231ad892a567bbb7f43f9a13f0..3ffb751ccbe10c1f3a1434b8809e4a9cf10f2857 100644
--- a/package.json
+++ b/package.json
@@ -101,6 +101,7 @@
 		"pretty-bytes": "^5.4.1",
 		"rollup": "^2.35.1",
 		"rollup-plugin-bundle-size": "^1.0.3",
+		"rollup-plugin-polyfill-node": "^0.13.0",
 		"rollup-plugin-postcss": "^4.0.0",
 		"rollup-plugin-terser": "^7.0.2",
 		"rollup-plugin-typescript2": "^0.32.0",
@@ -135,5 +136,6 @@
 		"rimraf": "^3.0.2",
 		"shell-quote": "^1.7.2",
 		"strip-ansi": "^6.0.0"
-	}
+	},
+	"packageManager": "yarn@4.9.1+sha512.f95ce356460e05be48d66401c1ae64ef84d163dd689964962c6888a9810865e39097a5e9de748876c2e0bf89b232d583c33982773e9903ae7a76257270986538"
 }
diff --git a/src/index.js b/src/index.js
index ddf90f2de1ddc690d6b2255dfffe945e1e3d80eb..f33ff08db58236eca0fcd68c9383b324b62d1648 100644
--- a/src/index.js
+++ b/src/index.js
@@ -20,6 +20,7 @@ import postcss from 'rollup-plugin-postcss';
 import typescript from 'rollup-plugin-typescript2';
 import json from '@rollup/plugin-json';
 import OMT from '@surma/rollup-plugin-off-main-thread';
+import polyfill from 'rollup-plugin-polyfill-node'
 import logError from './log-error';
 import {
 	EXTENSION,
@@ -339,7 +340,9 @@ function createConfig(options, entry, format, writeMeta) {
 	// @see https://github.com/rollup/plugins/tree/master/packages/node-resolve/#resolving-built-ins-like-fs
 	if (options.target === 'node') {
 		external = [/node:.*/].concat(builtinModules);
-	}
+	} else {
+    external = ['dns', 'url']
+  }
 
 	const peerDeps = Object.keys(pkg.peerDependencies || {});
 	if (options.external === 'none') {
@@ -527,6 +530,7 @@ function createConfig(options, entry, format, writeMeta) {
 							map: null,
 						}),
 					},
+					options.target !== 'node' && polyfill(),
 					(useTypescript || emitDeclaration) &&
 						typescript({
 							cwd: options.cwd,
